FORMAT: 1A

# Veo CMS API
The Veo CMS API powers the CMS within the Veo architecture

Please be sure to validate your response examples with [JSONLint][1].

[1]:  http://jsonlint.com/

# Group Business - Country
Represents actions against Country objects

## Country [/cms/business/country/{id}]
Represents a country

+ Parameters
    + id (string, `1`) ... The id of the Country.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 1,
            "parentId": 0,
            "title": "United States",
            "type": "Country"
        },
        "messages": []
    }
    ```

### Retrieve a Country [GET]
Returns a specific Country.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [Country][]

### Updates a Country [PUT]
Updates a specific Country

+ Request

    ```js
    {
        "data": {
            "parentId": 0,
            "title": "United States",
        }
    }
    ```
    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [Country][]

### Deletes a Country [DELETE]
Deletes a country

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 204


## List Countries [/cms/business/country/list]
Returns all Countries.

+ Model (application/json)

    ```js
        {
            "data": [
                {
                    "id": 1,
                    "parentId": 0,
                    "title": "United States",
                    "type": "Country"
                },
                {
                    "id": 2,
                    "parentId": 0,
                    "title": "MÃ©xico",
                    "type": "Country"
                }
            ],
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve all Countries [GET]
Retrieves all countries.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [List Countries][]

### Creates a Country [POST]
Creates a new Country.

+ Request

    ```js
    {
        "data": {
            "parentId": 0,
            "title": "United States",
        }
    }
    ```    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 201
    
    [Country][]

# Group Business - Genre
Represents actions against Genre objects

## Genre [/cms/business/genre/{id}]
Represents a genre

+ Parameters
    + id (string, `1`) ... The id of the Genre.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 3,
            "parentId": 0,
            "title": "Action",
            "type": "Genre"
        },
        "messages": []
    }
    ```

### Retrieve a Genre [GET]
Returns a specific Genre.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [Genre][]

### Updates a Genre [PUT]
Updates a specific Genre

+ Request

    ```js
    {
        "data": {
            "parentId": 0,
            "title": "Action",
        }
    }
    ```
    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [Genre][]

### Deletes a Genre [DELETE]
Deletes a Genre

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 204


## List Genres [/cms/business/genre/list]
Returns all Genres.

+ Model (application/json)

    ```js
        {
            "data": [
                {
                    "id": 3,
                    "parentId": 0,
                    "title": "Action",
                    "type": "Genre"
                },
                {
                    "id": 4,
                    "parentId": 0,
                    "title": "Spanish",
                    "type": "Genre"
                }
            ],
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve all Genres [GET]
Retrieves all genres.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [List Genres][]

### Creates a Genre [POST]
Creates a new Genre.

+ Request

    ```js
    {
        "data": {
            "parentId": 0,
            "title": "Action",
        }
    }
    ```    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 201
    
    [Genre][]

# Group Business - Distributor
Represents actions against Distributor objects

## Distributor [/cms/business/distributor/{id}]
Represents a distributor

+ Parameters
    + id (string, `1`) ... The id of the Distributor.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 1,
            "type": "Distributor",
            "status": "published",
            "name": "televisa.networks.mx",
            "code": "televisa.networks.mx",
            "contact": "Juan Perez"
        },
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve a Distributor [GET]
Returns a specific Distributor.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [Distributor][]

### Updates a Distributor [PUT]
Updates a specific Distributor

+ Request

    ```js
    {
        "data": {
            "status": "published",
            "name": "televisa.networks.mx",
            "code": "televisa.networks.mx",
            "contact": "Juan Perez"
        }
    }
    ```
    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [Distributor][]

### Deletes a Distributor [DELETE]
Deletes a distributor

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 204


## List Distributors [/cms/business/distributor/list]
Returns all Distributors.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "Distributor",
                "status": "published",
                "name": "televisa.networks.mx",
                "code": "televisa.networks.mx",
                "contact": "Juan Perez"
            },
            {
                "id": 2,
                "type": "Distributor",
                "status": "published",
                "name": "televisa.networks.mx",
                "code": "televisa.networks.mx",
                "contact": "Pedro Perez"
            }
        ],
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve all Distributors [GET]
Retrieves all distributors.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [List Distributors][]

### Creates a Distributor [POST]
Creates a new Distributor.

+ Request

    ```js
    {
        "data": {
            "status": "published",
            "name": "televisa.networks.mx",
            "code": "televisa.networks.mx",
            "contact": "Juan Perez"
        }
    }
    ```    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 201
    
    [Distributor][]

# Group Business - Person
Represents actions against Person objects

## Person [/cms/business/person/{id}]
Represents a Person

+ Parameters
    + id (string, `14`) ... The id of the Person.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 14,
            "type": "Person",
            "status": "published",
            "communicationName": "Helena Bonham Carter",
            "firstName": "Helena Bonham",
            "familyName": "Carter",
            "characterName": "Elpidio Valdez",
            "characterImage": {
                "id": 1,
                "alt": "Test alt value",
                "contentType": "image/png",
                "height": 126,
                "width": 224,
                "size": 30827,
                "url": "https://scablevision-a.akamaihd.net/prod/Picture/C_1_Picture_6046_profile152Image.png"
            },
            "role": "Actor",
            "asset": 3
        },
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve a Person [GET]
Returns a specific Person.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200

    [Person][]

### Updates a Person [PUT]
Updates a specific Person

+ Request

    ```js
    {
        "data": {
            "status": "published",
            "communicationName": "Helena Bonham Carter",
            "firstName": "Helena Bonham",
            "familyName": "Carter",
            "characterName": "Elpidio Valdez",
            "characterImage": {
                "id": 1,
                "alt": "Test alt value",
                "contentType": "image/png",
                "height": 126,
                "width": 224,
                "size": 30827,
                "url": "https://scablevision-a.akamaihd.net/prod/Picture/C_1_Picture_6046_profile152Image.png"
            },
            "role": "Actor",
            "asset": 3
        }
    }
    ```
    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [Person][]

### Deletes a Person [DELETE]
Deletes a Person

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 204

## List People [/cms/business/people]
Returns all People.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 14,
                "type": "Person",
                "status": "published",
                "communicationName": "Helena Bonham Carter",
                "firstName": "Helena Bonham",
                "familyName": "Carter",
                "characterName": "Elpidio Valdez",
                "characterImage": {
                    "id": 1,
                    "alt": "Test alt value",
                    "contentType": "image/png",
                    "height": 126,
                    "width": 224,
                    "size": 30827,
                    "url": "https://scablevision-a.akamaihd.net/prod/Picture/C_1_Picture_6046_profile152Image.png"
                },
                "role": "Actor",
                "asset": 3
            },
            {
                "id": 15,
                "type": "Person",
                "status": "published",
                "communicationName": "Edward Norton",
                "firstName": "Edward",
                "familyName": "Norton",
                "characterName": "Eutelia",
                "characterImage": null,
                "role": "Actor",
                "asset": 3
            }
        ],
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve all People [GET]
Retrieves all People.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200

    [List People][]


### Creates a Person [POST]
Creates a new Person in the CMS.

+ Request

    ```js
    {
        "data": {
            "status": "published",
            "communicationName": "Helena Bonham Carter",
            "firstName": "Helena Bonham",
            "familyName": "Carter",
            "characterName": "Elpidio Valdez",
            "characterImage": {
                "id": 1,
                "alt": "Test alt value",
                "contentType": "image/png",
                "height": 126,
                "width": 224,
                "size": 30827,
                "url": "https://scablevision-a.akamaihd.net/prod/Picture/C_1_Picture_6046_profile152Image.png"
            },
            "role": "Actor",
            "asset": 3
        }
    }
    ```    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 201

    [Person][]

# Group Business - Studio
Represents actions against Studio objects

## Studio [/cms/business/studio/{id}]
Represents a studio

+ Parameters
    + id (string, `1`) ... The id of the Studio.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 1,
            "type": "Studio",
            "status": "published",
            "name": "FOX",
            "code": "FOX"
        },
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve a Studio [GET]
Returns a specific Studio.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200

    [Studio][]

### Updates a Studio [PUT]
Updates a specific Studio

+ Request

    ```js
    {
        "data": {
            "status": "published",
            "name": "FOX",
            "code": "FOX"
        }
    }
    ```
    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [Studio][]

### Deletes a Studio [DELETE]
Deletes a studio

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 204

## List Studios [/cms/business/studio/list]
Returns all Studios.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "Studio",
                "status": "published",
                "name": "FOX",
                "code": "FOX"
            },
            {
                "id": 2,
                "type": "Studio",
                "status": "published",
                "name": "SONY",
                "code": "SON"
            }
        ],
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve all Studios [GET]
Retrieves all Studios.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200

    [List Studios][]

### Create a Studio [POST]
Creates a new Studio in the CMS

+ Request
    
    ```js
    {
        "data": {
            "status": "published",
            "name": "FOX",
            "code": "FOX"
        }
    }
    ```

    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 201

    [Studio][]

# Group System - Authentication
Represents actions against CMS Navigation objects

## Login [/cms/system/authentication/login]
Attempts to authenticate into the CMS

### Login to the site [POST]
Attempts to login to the site. Upon successful authentication, a token will be provided, which should be used in all subsequent authenticated requests

+ Request (application/json)

    ```js
    {
        "username": "user@gmail.com",
        "password": "password1"
    }
    ```

+ Response 200

    ```js
    {
        "data": {
            "token": "qwerty12345"
            },
            "messages": []
    }
    ```

+ Response 403

    ```js
    {
        "data": { },
        "messages": [
            {
                "error": "Invalid Credentials"
            }
        ]
    }
    ```

## Logout [/cms/system/authentication/logout]
Attempts to logout of the CMS

### Logout of the site [POST]
Attempts to logout to the site

+ Response 200


## Recover Password [/cms/system/authentication/recover]
Attempts to recover the user's password from the CMS

### Recover Password [POST]
Attempts to recover the user's password from the CMS

+ Request (application/json)

    ```js
    {
        "username": "user@gmail.com"
    }
    ```

+ Response 200

    ```js
    {
        "data": { },
        "messages": [
            {
                "success": "Your password has been sent to your e-mail address"
            }
        ]
    }
    ```

+ Response 403

    ```js
    {
        "data": { },
        "messages": [
            {
                "error": "Invalid credentials"
            }
        ]
    }
    ```

# Group System - Navigation
Represents actions against CMS Navigation objects

## Navigation [/cms/system/navigation]
Returns the Navigation of the CMS.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "Navigation",
                "title": "Entities",
                "items": [
                  {
                    "id": 10,
                    "type": "Navigation",
                    "title": "Asset",
                    "link": "/browse/asset"
                  },
                  {
                    "id": 11,
                    "type": "Navigation",
                    "title": "Picture",
                    "link": "/browse/picture"
                  }
                ]
            },
            {
                "id": 2,
                "type": "Navigation",
                "title": "Taxonomies",
                "items": [
                  {
                    "id": 20,
                    "type": "Navigation",
                    "title": "Genre",
                    "link": "/browse/genre"
                  },
                  {
                    "id": 21,
                    "type": "Navigation",
                    "title": "Rating",
                    "link": "/browse/rating"
                  }
                ]
            }
        ]
    }
    ```

### Retrieve the Navigation menu [GET]
Retrieves navigation menu for the CMS. This is simply an enumeration of the Entities in the system

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200

    [Navigation][]

# Group System - Publication
Represents the publication workflow of the CMS

## Status [/cms/system/publication/statuses]
Returns all available publication statuses

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "PublicationStatus",
                "title": "draft",
            },
            {
                "id": 2,
                "type": "PublicationStatus",
                "title": "scheduled",
            },
            {
                "id": 3,
                "type": "PublicationStatus",
                "title": "published",
            },
            {
                "id": 4,
                "type": "PublicationStatus",
                "title": "unpublished",
            },
            {
                "id": 5,
                "type": "PublicationStatus",
                "title": "expired",
            },
            
        ]
    }
    ```

### Retrieve all statuses [GET]
Retrieves all available publication statuses

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200

    [Status][]

## Transition [/cms/system/publication/transition/{transition}/{entityName}/{entityId}]
Requests involving the transitions of the publication workflow

+ Parameters
    + transition (string, `publish`) ... The transition to execute.
        + Values
            + `save`
            + `preview`
            + `publish`
            + `purge`
            + `unpublish`
    + entityName (string, `asset`) ... The name of the entity.
    + entityId (int, `5000`) ... The id of the entity.


### Execute Transition [POST]
Executes a transition for a given entity

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345
            
+ Response 200 (application/json)

+ Response 500 (application/json)

    ```js
    {
        "data": [],
        "messages": [
            {
                "error": "More information about error"
            }
        ]
    }


# Group System - User History
Retrieves the users' history of actions

## User History [/cms/system/user-history/{id}]
Retrieve the user's history given a userId

+ Parameters
    + id (string, `1`) ... The id of the User.

### Retrieve User History [GET]
Retrieve the user's history given a userId, ordered by last action date descending.

+ Request
        
    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200 (application/json)

    ```js
    {
        "data": [
            {
                "id": 3,
                "userId": 9,
                "type": "UserHistory",
                "action": {
                        "type": "publish",
                        "date": "2014-01-03 06:30:00"
                },
                "entity": {
                        "id": 4754,
                        "title": "Spacejam",
                        "type": "Asset"
                }
            },
            {
                "id": 2,
                "userId": 9,
                "type": "UserHistory",
                "action": {
                        "type": "save",
                        "date": "2014-01-03 06:10:00"
                },
                "entity": {
                        "id": 4754,
                        "title": "Spacejam",
                        "type": "Asset"
                }
            },
            {
                "id": 1,
                "userId": 9,
                "type": "UserHistory",
                "action": {
                        "type": "view",
                        "date": "2014-01-03 06:00:00"
                },
                "entity": {
                        "id": 4754,
                        "title": "Spacejam",
                        "type": "Asset"
                }
            }
        ],
        "messages": []
    }
    ```

+ Response 400 (application/json)

    ```js
    {
        "data": [],
        "messages": [
            {
                "error": "User not found"
            }
        ]
    }
    ```

### Creates a User History [POST]
Creates a new UserHistory record

+ Request
    
    ```js
    {
        "data": 
            {
                "action": {
                        "type": "publish",
                        "date": "2014-01-03 06:30:00"
                },
                "entity": {
                        "id": 4754,
                        "title": "Spacejam",
                        "type": "Asset"
                }
            }
    }
    ```
    
    + Headers
            
            X-Auth-Token: qwerty12345
    

+ Response 201

    ```js
    {
        "data": 
            {
                "id": 3,
                "userId": 9,
                "type": "UserHistory",
                "action": {
                        "type": "publish",
                        "date": "2014-01-03 06:30:00"
                },
                "entity": {
                        "id": 4754,
                        "title": "Spacejam",
                        "type": "Asset"
                }
            }
    }
    ```

### Deletes a User History [DELETE]
Deletes a specific User's History.

+ Request
        
    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 204

## Global User History [/cms/system/user-history/global]
Retrieve the global history of all users

### Retrieve Global User History [GET]
Retrieve global history across all users, ordered by last action date descending.

+ Request
        
    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200 (application/json)

    ```js
    {
        "data": [
            {
                "id": 4,
                "userId": 5,
                "type": "UserHistory",
                "action": {
                        "type": "publish",
                        "date": "2014-02-13 04:30:00"
                },
                "entity": {
                        "id": 5001,
                        "title": "Star Wars",
                        "type": "Asset"
                }
            },
            {
                "id": 3,
                "userId": 9,
                "type": "UserHistory",
                "action": {
                        "type": "publish",
                        "date": "2014-01-03 06:30:00"
                },
                "entity": {
                        "id": 4754,
                        "title": "Spacejam",
                        "type": "Asset"
                }
            },
            {
                "id": 2,
                "userId": 9,
                "type": "UserHistory",
                "action": {
                        "type": "save",
                        "date": "2014-01-03 06:10:00"
                },
                "entity": {
                        "id": 4754,
                        "title": "Spacejam",
                        "type": "Asset"
                }
            },
            {
                "id": 1,
                "userId": 9,
                "type": "UserHistory",
                "action": {
                        "type": "view",
                        "date": "2014-01-03 06:00:00"
                },
                "entity": {
                        "id": 4754,
                        "title": "Spacejam",
                        "type": "Asset"
                }
            }
        ],
        "messages": []
    }
    ```


# Group System - User
Represents actions against CMS User objects

## User [/cms/system/user/{id}]
Represents a user

+ Parameters
    + id (string, `1`) ... The id of the User.

### Retrieves a User [GET]
Returns a specific User.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345

+ Response 200

    ```js
    {
        "data": {
            "id": 1,
            "type": "User",
            "firstName": "John",
            "lastName": "Doe",
            "username": "johndoe@mymail.com",
            "role": "admin"
        }
    }
    ```

### Updates a User [PUT]
Updates a specific User.

+ Request

    ```js
    {
        "data": {
            "firstName": "John",
            "lastName": "Doe",
            "username": "johndoe@mymail.com",
            "role": "admin"
        }
    }
    ```
    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    ```js
    {
        "data": {
            "id": 1,
            "type": "User",
            "firstName": "John",
            "lastName": "Doe",
            "username": "johndoe@mymail.com",
            "role": "admin"
        }
    }
    ```

### Deletes a User [DELETE]
Deletes a specific User.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 204

## List Users [/cms/system/users]
Returns all Users.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "User",
                "firstName": "John",
                "lastName": "Doe",
                "username": "johndoe@mymail.com",
                "role": "admin"
            },
            {
                "id": 2,
                "type": "User",
                "firstName": "Jane",
                "lastName": "Doe",
                "username": "janedoe@mymail.com",
                "role": "basic"
            }
        ]
    }
    ```

### Retrieve all Users [GET]
Retrieves all users.

+ Request

    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 200

    [List Users][]

### Creates a User [POST]
Creates a new User in the CMS.

+ Request

    ```js
    {
        "data": {
            "firstName": "John",
            "lastName": "Doe",
            "username": "johndoe@mymail.com",
            "role": "admin"
        }
    }
    ```    
    + Headers
            
            X-Auth-Token: qwerty12345


+ Response 201

    ```js
    {
        "data": {
            "id": 1,
            "type": "User",
            "firstName": "John",
            "lastName": "Doe",
            "username": "johndoe@mymail.com",
            "role": "admin"
        }
    }
    ```
